{
  "name": "Muler",
  "script": "Muler.js",
  "version": "2.0.0",
  "description": "Muler is a meta-script and part of the Meta-Toolbox. Muler allows for you to designate and store variables in a character ability (called a Mule), then retrieve them in the same or a later call, and all from within other scripts.\t\tThese variables may be used as static-access tables, where you look up the value associated with a particular key, including keys that fall within given numerical ranges. \r\rAs of version 2.0.0, Muler will also mule-in Roll20 rollable tables in your game, giving you access to rollable tables with a modified roll, by name, or by open-ended index. To explain: using a rollable table, you always get a random return against the whole of the table. If the rollable table represented the potential for injury (and what type), you might want to roll against the table using a modifier such as Constitutition, Fatigue, or the like. Using Muler lets you go from rolling [[ 1t[InjuryTable] ]], to rolling [[ 1d20 + @{selected|fatigue_mod} ]], moving your potential results through different probabilities. \r\rFor more information, see the original thread in the API forum:\r\r[Muler Forum Thread](https://app.roll20.net/forum/post/10005710/meta-script-muler-get-slash-set-variables-static-tables/?pageforid=10005710#post-10005710)\r\rOr read about the full set of meta-scripts available: \r\r[Meta Toolbox Forum Thread](https://app.roll20.net/forum/post/10005695/script-set-the-meta-toolbox)",
  "authors": "timmaugh",
  "roll20userid": "5962076",
  "useroptions": [],
  "dependencies": [],
  "modifies": {
    "state.Muler": "read, write"
  },
  "conflicts": [],
  "previousversions": [
    "1.0.4",
    "1.0.5",
    "1.0.6",
    "1.0.7",
    "1.0.8",
    "1.0.9"
  ]
}
